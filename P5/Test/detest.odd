<?xml version="1.0" encoding="utf-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0"
     xmlns:rng="http://relaxng.org/ns/structure/1.0"
     xmlns:sch="http://purl.oclc.org/dsdl/schematron"
     xmlns:s="http://www.ascc.net/xml/schematron"
     xml:lang="en" n="detest">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>Testing errors</title>
        <author>Lou Burnard</author>
      </titleStmt>
      <publicationStmt>
        <p> </p>
      </publicationStmt>
      <sourceDesc>
        <p>authored from scratch</p>
      </sourceDesc>
    </fileDesc>
    <revisionDesc>
      <change when="2016-11-06" who="#sbauman.emt">
	Added <gi>elementSpec</gi> for <gi>blort3</gi> in order to test
	deprecation of <val>isoschematron</val>. (Note: this change begun
	during TEI Council meeting in Vienna.)
      </change>
      <change when="2015-03-27" who="#sbauman.emt">
	Added an element specification to test constraints on
	<gi>defaultVal</gi>
      </change>
      <change when="2014-09-10" who="#sbauman.emt">
	Added <name type="module">msdescription</name> and
	<name type="module">tagdocs</name>
      </change>
    </revisionDesc>
  </teiHeader>
  <text>
    <body>
      <div>
        <head>My Minimal Schema</head>
        <p>Here is the introduction to your document</p>
        <p>Here is the schema:</p>
        <schemaSpec ident="detest" start="TEI">
          <moduleRef key="header"/>
          <moduleRef key="core"/>
          <moduleRef key="tei"/>
          <moduleRef key="textstructure"/>
          <moduleRef key="analysis"/>
          <moduleRef key="textcrit"/>
          <moduleRef key="transcr"/>
          <moduleRef key="linking"/>
	  <moduleRef key="msdescription"/>
	  <moduleRef key="tagdocs"/>
          <moduleRef key="spoken"/>
          <elementSpec ident="p" mode="change">
            <constraintSpec mode="add" ident="c1" scheme="schematron">
              <constraint>
                <sch:report test="tei:list"> 
	    lists inside paragraphs not supported </sch:report>
              </constraint>
            </constraintSpec>
            <constraintSpec mode="add" ident="c2" scheme="schematron">
              <constraint>
                <sch:rule context="tei:p|tei:q">
                  <sch:report test="contains(@rend,' ')"> 
		multi-valued rend is not supported </sch:report>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <attList>
              <attDef ident="rend" mode="change">
                <valList type="closed" mode="add">
                  <valItem ident="center"/>
                  <valItem ident="boxed"/>
                </valList>
              </attDef>
              <attDef ident="type" mode="change">
                <datatype>
                  <dataRef name="float"/>
                </datatype>
              </attDef>
            </attList>
          </elementSpec>
          <elementSpec ident="distinct" mode="change" module="core">
            <attList>
              <!-- min=0 max=1,2,* -->
              <attDef ident="o01" usage="opt">
                <gloss  xml:lang="en" versionDate="2014-01-12">optional, min 0, max 1</gloss>
                <datatype minOccurs="0" maxOccurs="1">
                  <dataRef key="teidata.count"/>
                </datatype>
              </attDef>
              <attDef ident="o02" usage="opt">
                <gloss  xml:lang="en" versionDate="2014-01-12">optional, min 0, max 2</gloss>
                <datatype minOccurs="0" maxOccurs="2">
                  <dataRef key="teidata.count"/>
                </datatype>
              </attDef>
              <attDef ident="o0i" usage="opt">
                <gloss  xml:lang="en" versionDate="2014-01-12">optional, min 0, max unbounded</gloss>
                <datatype minOccurs="0" maxOccurs="unbounded">
                  <dataRef key="teidata.count"/>
                </datatype>
              </attDef>
              <!-- min=1 max=1,2,* -->
              <attDef ident="o11" usage="opt">
                <gloss  xml:lang="en" versionDate="2014-01-12">optional, min 1, max 1</gloss>
                <datatype minOccurs="1" maxOccurs="1">
                  <dataRef key="teidata.count"/>
                </datatype>
              </attDef>
              <attDef ident="o12" usage="opt">
                <gloss  xml:lang="en" versionDate="2014-01-12">optional, min 1, max 2</gloss>
                <datatype minOccurs="1" maxOccurs="2">
                  <dataRef key="teidata.count"/>
                </datatype>
              </attDef>
              <attDef ident="o1i" usage="opt">
                <gloss  xml:lang="en" versionDate="2014-01-12">optional, min 1, max unbounded</gloss>
                <datatype minOccurs="1" maxOccurs="unbounded">
                  <dataRef key="teidata.count"/>
                </datatype>
              </attDef>
              <!-- min=2 max=2,* -->
              <attDef ident="o22" usage="opt">
                <gloss  xml:lang="en" versionDate="2014-01-12">optional, min 2, max 2</gloss>
                <datatype minOccurs="2" maxOccurs="2">
                  <dataRef key="teidata.count"/>
                </datatype>
              </attDef>
              <attDef ident="o2i" usage="opt">
                <gloss  xml:lang="en" versionDate="2014-01-12">optional, min 2, max unbounded</gloss>
                <datatype minOccurs="2" maxOccurs="unbounded">
                  <dataRef key="teidata.count"/>
                </datatype>
              </attDef>
            </attList>
          </elementSpec>
          <elementSpec ident="div" mode="change">
            <constraintSpec mode="add" ident="canondiv" scheme="schematron">
              <constraint>
                <sch:report test="@type='canon' and          parent::tei:div/@type='canon'">
	      divs of type 'canon' may not be nested
	    </sch:report>
                <sch:report test="@type='canon' and          parent::tei:div/@type='register'">
	      divs of type 'canon' may not be nested within 'register'
	    </sch:report>
                <sch:report test="@type='canon' and count          (tei:div[@type='canonText']) &gt;1">
	      divs of type 'canon' may contain only one 'canonText'
	    </sch:report>
                <sch:report test="@type='canonText' and           not(parent::tei:div[@type='canon'])">
	      divs of type 'canonText' can only occur inside 'canon'
	    </sch:report>
              </constraint>
            </constraintSpec>
          </elementSpec>
          <elementSpec ident="lg" mode="change">
            <content>
              <group xmlns="http://relaxng.org/ns/structure/1.0">
                <zeroOrMore>
                  <choice>
                    <ref name="model.divTop"/>
                    <ref name="model.global"/>
                  </choice>
                </zeroOrMore>
                <choice>
                  <ref name="model.lLike_sequence"/>
                  <ref name="model.stageLike"/>
                  <ref name="model.labelLike"/>
                  <ref name="lg"/>
                </choice>
                <zeroOrMore>
                  <choice>
                    <ref name="model.lLike_sequence"/>
                    <ref name="model.stageLike"/>
                    <ref name="model.labelLike"/>
                    <ref name="model.global"/>
                    <ref name="lg"/>
                  </choice>
                </zeroOrMore>
                <zeroOrMore>
                  <group>
                    <ref name="model.divBottom"/>
                  </group>
                  <zeroOrMore>
                    <ref name="model.global"/>
                  </zeroOrMore>
                </zeroOrMore>
              </group>
            </content>
          </elementSpec>
          <elementSpec ident="l" mode="change">
            <classes mode="replace">
              <memberOf key="att.global"/>
              <memberOf key="att.metrical"/>
              <memberOf key="att.enjamb"/>
              <memberOf key="model.lLike" min="2" max="6"/>
            </classes>
          </elementSpec>
          <elementSpec ident="blort" mode="add">
            <desc  xml:lang="en" versionDate="2014-01-12">a completely spurious element made up for testing purposes only</desc>
            <classes>
              <memberOf key="model.pPart.data"/>
            </classes>
            <content>
              <macroRef key="macro.phraseSeq"/>
            </content>
            <attList>
              <attDef ident="cert">
                <desc  xml:lang="en" versionDate="2014-01-12">certainty</desc>
                <datatype>
                  <dataRef key="teidata.certainty"/>
                </datatype>
                <valDesc/>
              </attDef>
              <attDef ident="code">
                <desc  xml:lang="en" versionDate="2014-01-12">code</desc>
                <datatype>
                  <dataRef key="teidata.code"/>
                </datatype>
                <valDesc/>
              </attDef>
              <attDef ident="dur">
                <desc  xml:lang="en" versionDate="2014-01-12">duration</desc>
                <datatype>
                  <dataRef key="teidata.duration.w3c"/>
                </datatype>
                <valDesc/>
              </attDef>
              <attDef ident="enumerated">
                <desc  xml:lang="en" versionDate="2014-01-12">enumerated</desc>
                <datatype>
                  <dataRef key="teidata.enumerated"/>
                </datatype>
                <valDesc/>
              </attDef>
              <attDef ident="key">
                <desc  xml:lang="en" versionDate="2014-01-12">key</desc>
                <datatype>
                  <dataRef key="teidata.key"/>
                </datatype>
                <valDesc/>
              </attDef>
              <attDef ident="count">
                <desc  xml:lang="en" versionDate="2014-01-12">count</desc>
                <datatype>
                  <dataRef key="teidata.count"/>
                </datatype>
                <valDesc/>
              </attDef>
              <attDef ident="language">
                <desc  xml:lang="en" versionDate="2014-01-12">language</desc>
                <datatype>
                  <dataRef key="teidata.language"/>
                </datatype>
                <valDesc/>
              </attDef>
              <attDef ident="name">
                <desc  xml:lang="en" versionDate="2014-01-12">name</desc>
                <datatype>
                  <dataRef key="teidata.name"/>
                </datatype>
                <valDesc/>
              </attDef>
              <attDef ident="names">
                <desc  xml:lang="en" versionDate="2014-01-12">names</desc>
                <datatype maxOccurs="unbounded">
                  <dataRef key="teidata.name"/>
                </datatype>
                <valDesc/>
              </attDef>
              <attDef ident="pattern">
                <desc  xml:lang="en" versionDate="2014-01-12">pattern</desc>
                <datatype>
                  <dataRef key="teidata.pattern"/>
                </datatype>
                <valDesc/>
              </attDef>
              <attDef ident="numeric">
                <desc  xml:lang="en" versionDate="2014-01-12">numeric</desc>
                <datatype>
                  <dataRef key="teidata.numeric"/>
                </datatype>
                <valDesc/>
              </attDef>
              <attDef ident="pointer">
                <desc  xml:lang="en" versionDate="2014-01-12">pointer</desc>
                <datatype>
                  <dataRef key="teidata.pointer"/>
                </datatype>
                <valDesc/>
              </attDef>
              <attDef ident="pointers">
                <desc  xml:lang="en" versionDate="2014-01-12">pointers</desc>
                <datatype maxOccurs="unbounded">
                  <dataRef key="teidata.pointer"/>
                </datatype>
                <valDesc/>
              </attDef>
              <attDef ident="prob">
                <desc  xml:lang="en" versionDate="2014-01-12">probability</desc>
                <datatype>
                  <dataRef key="teidata.probability"/>
                </datatype>
                <valDesc/>
              </attDef>
              <attDef ident="sex">
                <desc  xml:lang="en" versionDate="2014-01-12">sex</desc>
                <datatype>
                  <dataRef key="teidata.sex"/>
                </datatype>
                <valDesc/>
              </attDef>
              <attDef ident="temporal">
                <desc  xml:lang="en" versionDate="2014-01-12">temporal</desc>
                <datatype>
                  <dataRef key="teidata.temporal.w3c"/>
                </datatype>
                <valDesc/>
              </attDef>
              <attDef ident="truth">
                <desc  xml:lang="en" versionDate="2014-01-12">truth</desc>
                <datatype>
                  <dataRef key="teidata.truthValue"/>
                </datatype>
                <valDesc/>
              </attDef>
              <attDef ident="xtruth">
                <desc  xml:lang="en" versionDate="2014-01-12">xtruth</desc>
                <datatype>
                  <dataRef key="teidata.xTruthValue"/>
                </datatype>
                <valDesc/>
              </attDef>
            </attList>
          </elementSpec>
	  <elementSpec ident="blort2" mode="add">
            <desc xml:lang="en" versionDate="2015-03-27">another completely spurious element made up for testing purposes only</desc>
            <classes>
              <memberOf key="model.pPart.data"/>
            </classes>
            <content>
              <macroRef key="macro.phraseSeq"/>
            </content>
            <attList>
	      <attDef ident="default-is-in-list-opt" usage="opt">
		<datatype>
		  <dataRef key="teidata.enumerated"/>
		</datatype>
		<defaultVal>ONE</defaultVal>
		<valList mode="add" type="closed">
		  <valItem ident="ONE"/>
		  <valItem ident="TWO"/>
		  <valItem ident="THREE"/>
		</valList>
	      </attDef>
	      <attDef ident="default-is-in-list-rec" usage="rec">
		<datatype>
		  <dataRef key="teidata.enumerated"/>
		</datatype>
		<defaultVal>ONE</defaultVal>
		<valList mode="add" type="closed">
		  <valItem ident="ONE"/>
		  <valItem ident="TWO"/>
		  <valItem ident="THREE"/>
		</valList>
	      </attDef>
	      <attDef ident="default-is-in-list-req" usage="req">
		<datatype>
		  <dataRef key="teidata.enumerated"/>
		</datatype>
		<defaultVal>ONE</defaultVal>
		<valList mode="add" type="closed">
		  <valItem ident="ONE"/>
		  <valItem ident="TWO"/>
		  <valItem ident="THREE"/>
		</valList>
	      </attDef>
	      <attDef ident="default-NOT-in-list-opt" usage="opt">
		<datatype>
		  <dataRef key="teidata.enumerated"/>
		</datatype>
		<defaultVal>ONE</defaultVal>
		<valList mode="add" type="closed">
		  <valItem ident="TWO"/>
		  <valItem ident="THREE"/>
		</valList>
	      </attDef>
	      <attDef ident="default-NOT-in-list-rec" usage="rec">
		<datatype>
		  <dataRef key="teidata.enumerated"/>
		</datatype>
		<defaultVal>ONE</defaultVal>
		<valList mode="add" type="closed">
		  <valItem ident="TWO"/>
		  <valItem ident="THREE"/>
		</valList>
	      </attDef>
	      <attDef ident="default-NOT-in-list-req" usage="req">
		<datatype>
		  <dataRef key="teidata.enumerated"/>
		</datatype>
		<defaultVal>ONE</defaultVal>
		<valList mode="add" type="closed">
		  <valItem ident="TWO"/>
		  <valItem ident="THREE"/>
		</valList>
	      </attDef>
	    </attList>
	    <remarks>
	      <p>This element tests schematron constraints that try to
	      ensure the saneness of <gi>defaultVal</gi></p>
	    </remarks>
	  </elementSpec>
	  <elementSpec ident="blort3" mode="add">
            <desc xml:lang="en" versionDate="2016-09-27">another completely spurious element made up for testing purposes only</desc>
            <classes>
              <memberOf key="model.pPart.data"/>
            </classes>
            <content>
              <rng:ref name="macro.phraseSeq"/>
            </content>
	    <!--
		* The following <constraintSpec>s have an @ident that
		* is of the form
		* "@scheme_content-language_expected-result",
		* where:
		*   @scheme = the value of ../@scheme
		*   content-language = whether ../* are Schematron 1.x ("schematron") or ISO Schematron elements
		*   expected-result = OK, deprecated, or error
		* On or about 2017-12-14 the @ident for isoschamtron_isoschematron_deprecated should be
		* changed to isoschematron_isoschematron_error.
	    -->
	    <constraintSpec scheme="schematron" ident="schematron_isoschematron_OK">
	      <!-- This should *not* raise an error, as ISO Schematron
		   is allowed inside constraintSpec/schematron -->
	      <constraint>
		<sch:assert test="true()"/>
	      </constraint>
	    </constraintSpec>
	    <constraintSpec scheme="isoschematron" ident="isoschematron_isoschematron_deprecated">
 	      <!-- This should raise a deprecation message until 2017-12-14, -->
	      <!-- after which it should raise an error, as "isoschematron" -->
	      <!-- will no longer be allowed. -->
	      <constraint>
		<sch:assert test="true()"/>
	      </constraint>
	    </constraintSpec>
	    <constraintSpec scheme="isoschematron" ident="isoschematron_schematron_error">
	      <!-- This should just raise an error, as "isoschematron"
	           is no longer a valid value of @scheme; and
	           Schematron 1.x wouldn't be allowed in there even if
	           it were. -->
	      <constraint>
		<s:assert test="false()"/>
	      </constraint>
	    </constraintSpec>
	    <constraintSpec scheme="schematron" ident="schematron_schematron_deprecated">
	      <!-- This should raise a warning, as Schematron 1.x is
		   no longer allowed inside a "schematron" <constraintSpec>. -->
	      <constraint>
		<s:assert test="false()"/>
	      </constraint>
	    </constraintSpec>
	  </elementSpec>

          <elementSpec ident="relation" mode="change">
            <constraintSpec ident="activepassive" mode="delete" scheme="schematron"/>
          </elementSpec>

	  <elementSpec ident="abbr" mode="change">
	    <desc>change for the sake of change</desc>
	    <gloss>change for the sake of change</gloss>
	    <attList>
	      <attDef ident="type" mode="change">
		<desc>change for the sake of change</desc>
		<gloss>change for the sake of change</gloss>
	      </attDef>
	    </attList>
	    <remarks><p>change for the sake of change</p></remarks>
	  </elementSpec>
        </schemaSpec>
      </div>
    </body>
  </text>
</TEI>
